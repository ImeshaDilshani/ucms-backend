-- UCMS Database Schema

-- Users table (base for all user types)
CREATE TABLE users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(64) UNIQUE NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    role VARCHAR(16) NOT NULL CHECK (role IN ('ADMIN', 'LECTURER', 'STUDENT')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Students table (extends users)
CREATE TABLE students (
    id BIGINT PRIMARY KEY,
    index_no VARCHAR(32) UNIQUE,
    first_name VARCHAR(64),
    last_name VARCHAR(64),
    program VARCHAR(64),
    "year" INT,
    FOREIGN KEY (id) REFERENCES users(id) ON DELETE CASCADE
);

-- Lecturers table (extends users)
CREATE TABLE lecturers (
    id BIGINT PRIMARY KEY,
    staff_no VARCHAR(32) UNIQUE,
    department VARCHAR(64),
    FOREIGN KEY (id) REFERENCES users(id) ON DELETE CASCADE
);

-- Courses table
CREATE TABLE courses (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    code VARCHAR(16) UNIQUE NOT NULL,
    title VARCHAR(255) NOT NULL,
    credits INT NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Course prerequisites (many-to-many)
CREATE TABLE course_prerequisites (
    course_id BIGINT NOT NULL,
    prerequisite_id BIGINT NOT NULL,
    PRIMARY KEY(course_id, prerequisite_id),
    FOREIGN KEY (course_id) REFERENCES courses(id) ON DELETE CASCADE,
    FOREIGN KEY (prerequisite_id) REFERENCES courses(id) ON DELETE CASCADE
);

-- Semesters table
CREATE TABLE semesters (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(32) UNIQUE NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    add_drop_start DATE NOT NULL,
    add_drop_end DATE NOT NULL,
    is_current BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Course offerings per semester
CREATE TABLE offerings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    course_id BIGINT NOT NULL,
    semester_id BIGINT NOT NULL,
    section VARCHAR(8) NOT NULL,
    lecturer_id BIGINT,
    capacity INT NOT NULL,
    room VARCHAR(32),
    schedule TEXT, -- JSON string for schedule
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(course_id, semester_id, section),
    FOREIGN KEY (course_id) REFERENCES courses(id),
    FOREIGN KEY (semester_id) REFERENCES semesters(id),
    FOREIGN KEY (lecturer_id) REFERENCES lecturers(id)
);

-- Student enrollments
CREATE TABLE enrollments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    offering_id BIGINT NOT NULL,
    student_id BIGINT NOT NULL,
    status VARCHAR(16) NOT NULL CHECK (status IN ('ENROLLED', 'WAITLISTED', 'DROPPED')),
    enrolled_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    dropped_at TIMESTAMP,
    UNIQUE(offering_id, student_id),
    FOREIGN KEY (offering_id) REFERENCES offerings(id),
    FOREIGN KEY (student_id) REFERENCES students(id)
);

-- Assessments for each offering
CREATE TABLE assessments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    offering_id BIGINT NOT NULL,
    name VARCHAR(64) NOT NULL,
    weight_percent DECIMAL(5,2) NOT NULL,
    max_score DECIMAL(8,2) NOT NULL,
    due_date DATE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (offering_id) REFERENCES offerings(id)
);

-- Grades for assessments
CREATE TABLE grades (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    assessment_id BIGINT NOT NULL,
    student_id BIGINT NOT NULL,
    score DECIMAL(8,2),
    graded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    is_locked BOOLEAN DEFAULT FALSE,
    UNIQUE(assessment_id, student_id),
    FOREIGN KEY (assessment_id) REFERENCES assessments(id),
    FOREIGN KEY (student_id) REFERENCES students(id)
);

-- Refresh tokens for JWT
CREATE TABLE refresh_tokens (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    token VARCHAR(255) NOT NULL UNIQUE,
    expires_at TIMESTAMP NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Indexes for better performance
CREATE INDEX idx_users_username ON users(username);
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_students_index_no ON students(index_no);
CREATE INDEX idx_lecturers_staff_no ON lecturers(staff_no);
CREATE INDEX idx_courses_code ON courses(code);
CREATE INDEX idx_enrollments_student ON enrollments(student_id);
CREATE INDEX idx_enrollments_offering ON enrollments(offering_id);
CREATE INDEX idx_offerings_semester ON offerings(semester_id);
CREATE INDEX idx_offerings_lecturer ON offerings(lecturer_id);
CREATE INDEX idx_grades_student ON grades(student_id);
CREATE INDEX idx_refresh_tokens_user ON refresh_tokens(user_id);
CREATE INDEX idx_refresh_tokens_token ON refresh_tokens(token);
